initSidebarItems({"constant":[["COPY_FROM_PARENT","`COPY_FROM_PARENT` can be used for many `CreateWindow` fields"],["CURRENT_TIME","`CURRENT_TIME` can be used in most requests that take a `Timestamp`"],["NO_SYMBOL","`NO_SYMBOL` fills in unused entries in `Keysym` tables"]],"enum":[["ConnError","Error type that is returned by `Connection::has_error`"],["EventQueueOwner",""]],"struct":[["CheckedVoidCookie",""],["Connection","xcb::Connection handles communication with the X server. It wraps an `xcb_connection_t` object and will call `xcb_disconnect` when the `Connection` goes out of scope"],["VoidCookie",""]],"trait":[["BaseError","marker trait to designate base events (aka. non GE_GENERIC events)"],["BaseEvent","Trait for base events (aka. non GE_GENERIC events)"],["CheckedCookie",""],["CheckedCookieWithReply",""],["Cookie",""],["FromWireError","trait for converting wire data to an error `Self` is normally an enum of several errors subtypes"],["FromWireEvent","trait for converting wire data to an event enum `Self` is normally an enum of several event subtypes"],["FromWireGeEvent","trait for converting wire data to a generic event `Self` is normally an enum of several event subtypes"],["GeEvent","marker trait to designate GE_GENERIC events"],["RawRequest",""],["Reply",""],["Request",""],["RequestWithReply",""],["RequestWithoutReply",""],["UncheckedCookieWithReply",""],["Wired","trait for types that can serialize themselves over the X wire."],["Xid","A X resource trait"],["XidNew","Trait for X resources that can be created directly from `Connection::generate_id`"]],"type":[["ConnResult",""]]});