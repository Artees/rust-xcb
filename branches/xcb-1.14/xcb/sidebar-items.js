initSidebarItems({"enum":[["ConnError","Error type that is returned by `Connection::has_error`."],["Error","The general error type for Rust-XCB."],["Event",""],["EventQueueOwner","Determines whether Xlib or XCB owns the event queue of [`Connection`]."],["Extension",""],["ProtocolError","A protocol error issued from the X server"]],"fn":[["parse_display","Parses a display string name in the form documented by (X(7x))man."]],"mod":[["bigreq",""],["composite",""],["damage",""],["dpms",""],["dri2",""],["dri3",""],["ge",""],["glx",""],["present",""],["randr",""],["record",""],["render",""],["res",""],["screensaver",""],["shape",""],["shm",""],["sync",""],["x","The core X protocol definitions"],["xc_misc",""],["xevie",""],["xf86dri",""],["xf86vidmode",""],["xfixes",""],["xinerama",""],["xinput",""],["xkb",""],["xprint",""],["xselinux",""],["xtest",""],["xv",""],["xvmc",""]],"struct":[["AuthInfo","Container for authentication information to connect to the X server"],["CheckedVoidCookie","The checked cookie type returned by void-requests."],["Connection","`Connection` is the central object of XCB."],["DisplayInfo","Display info returned by [`parse_display`]"],["ExtensionData","Extension data as returned by each extensions `get_extension_data`. See [crate::bigreq::get_extension_data] as example."],["SpecialEventId","A struct that serve as an identifier for internal special queue in XCB"],["VoidCookie","The default cookie type returned by void-requests."]],"trait":[["BaseError","A trait to designate base protocol errors."],["BaseEvent","Trait for base events (aka. non GE_GENERIC events)"],["CheckedCookie","A marker trait for a cookie that allows synchronized error checking."],["CheckedCookieWithReply","A trait for checked cookies of requests that send a reply."],["Cookie","General trait for cookies returned by requests."],["GeEvent","A trait for GE_GENERIC events"],["RawRequest","Trait implemented by all requests to send the serialized data over the wire."],["Reply","Trait for request replies"],["Request","Trait implemented by requests types."],["RequestWithReply","Trait for requests that return a reply."],["RequestWithoutReply","Marker trait for requests that do not return a reply."],["ResolveWireError","Trait for the resolution of raw wire error to a unified error enum."],["ResolveWireEvent","Trait for the resolution of raw wire event to a unified event enum."],["ResolveWireGeEvent","Trait for the resolution of raw wire GE_GENERIC event to a unified event enum."],["UncheckedCookieWithReply","A trait for unchecked cookies of requests that send a reply."],["Wired","Trait for types that can serialize themselves over the X wire."],["Xid","A X resource trait"],["XidNew","Trait for X resources that can be created directly from `Connection::generate_id`"]],"type":[["ConnResult","The result type associated with [ConnError]."],["ProtocolResult","The result type associated with [ProtocolError]."],["Result","The general result type for Rust-XCB."]]});